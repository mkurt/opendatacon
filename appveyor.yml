version: AppVeyorBuild-{build}
branches:
  only:
  - develop
  - master
  - /^release\/.*$/
  - /^[0-9]+\.[0-9]+\.[0-9]+.*$/
  - /^feature\/.*$/
  
os: Visual Studio 2017


#---------------------------------#
#       build configuration       #
#---------------------------------#
configuration:
  - Release
  - Debug

environment:
  matrix:
    - platform: Win32
      cpu_bits: 32
      python_inst: C:\Python37
      cmake_builddir: build-win32
    - platform: x64
      cpu_bits: 64
      python_inst: C:\Python37-x64
      cmake_builddir: build-win64
 
clone_folder: C:\projects\opendatacon
  
init:

install:
- ps: >-
    If (-not (Test-Path C:\libmodbus\libmodbus)){
      Start-FileDownload "https://www.dropbox.com/s/iqf95y9x1x4ol36/libmodbus.zip?dl=1" -FileName libmodbus.zip
      7z x -y libmodbus.zip
      New-Item C:\libmodbus -ItemType Directory
      Move-Item .\libmodbus C:\libmodbus\libmodbus
    }
    If (-not (Test-Path C:\libmicrohttpd\libmicrohttpd-0.9.17-w32)){
      Start-FileDownload "https://www.dropbox.com/s/13t92f57wie4wnb/libmicrohttpd-0.9.17-w32.zip?dl=1" -FileName libmicrohttpd-0.9.17-w32.zip
      7z x -y libmicrohttpd-0.9.17-w32.zip
      New-Item C:\libmicrohttpd -ItemType Directory
      Move-Item .\libmicrohttpd-0.9.17-w32 C:\libmicrohttpd\libmicrohttpd-0.9.17-w32
    }
    If (-not (Test-Path C:\libmicrohttpd\libmicrohttpd-0.9.17-w64)){
      Start-FileDownload "https://drive.google.com/uc?export=download&id=1Xfl5iwGOjm2Ggb_nwWJcNzjM05Bl9irT" -FileName libmicrohttpd-0.9.37-w64.zip
      7z x -y libmicrohttpd-0.9.37-w64.zip
      Move-Item .\libmicrohttpd-0.9.37-w64 C:\libmicrohttpd\libmicrohttpd-0.9.17-w64
    }
cache:
- C:\libmodbus\
- C:\libmicrohttpd\

before_build:
- cmd: cd C:\projects\opendatacon
- ps: >-
        If ($env:Platform -Match "64") {
            $env:GEN_PLAT=" Win64"
        } Else {
            $env:GEN_PLAT=""
        }
- cmd: 'cmake . -B%cmake_builddir% -G"Visual Studio 15 2017%GEN_PLAT%" -DFULL=ON -DCMAKE_CONFIGURATION_TYPES=%configuration% -DCMAKE_INSTALL_PREFIX=%cmake_builddir%\install -DMODBUS_HOME=c:\libmodbus\libmodbus\windows%cpu_bits% -DMICROHTTPD_HOME=C:\libmicrohttpd\libmicrohttpd-0.9.17-w%cpu_bits% -DPYTHON_HOME=%python_inst%'
#build:
#  parallel: true                  # enable MSBuild parallel builds
#  project: build-win32\opendatacon_suite.sln      # path to Visual Studio solution or project
build_script:
- cmd: cmake --build %cmake_builddir% --config %configuration%
- cmd: cmake --build %cmake_builddir% --config %configuration% --target INSTALL
- cmd: cmake --build %cmake_builddir% --config %configuration% --target PACKAGE

test_script:
- cmd: '%cmake_builddir%\install\ODC_tests.exe -d yes'
- cmd: '%cmake_builddir%\install\DNP3Port_tests.exe -d yes'
- cmd: '%cmake_builddir%\install\MD3Port_tests.exe debug -d yes'
- cmd: '%cmake_builddir%\install\CBPort_tests.exe debug -d yes'
- cmd: '%cmake_builddir%\install\PyPort_tests.exe debug -d yes'

# Capture the log file outputs so we can debug failed tests.
on_finish:
- echo Scanning project folder for all files - C:\projects\opendatacon
- cmd: ls -oR --group-directories-first C:\projects\opendatacon > dirlist.txt
- ps: Push-AppveyorArtifact dirlist.txt -FileName ProjectDirectoryListing.txt
- ps: Get-ChildItem C:\projects\opendatacon\*.log | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

artifacts:
  - path: $(cmake_builddir)\opendatacon-*.*.*-*-*-*-*-*.exe
    name: Releases


deploy:
  release: 'opendatacon $(APPVEYOR_REPO_TAG_NAME)'
  description: ''
  provider: GitHub
  auth_token:
    secure: MuDZnJV9gGH51bmihPpcFDEyAVC3bU9BPaciSz48OI3sZfe1j4Y7BaMLV4qJqwIC
  draft: false
  prerelease: false
  tag: $(APPVEYOR_REPO_TAG_NAME)
  on:
    appveyor_repo_tag: true
    
###
##Here is a script your can run in your browser's javascript terminal to build any branch/commit
##, so you don't need to bother with auth (run on project's page)
###

#var [, , accountName, projectSlug] = document.location.pathname.split('/');
#fetch(`https://ci.appveyor.com/api/account/${accountName}/builds`,
#{
#	method: "POST",
#	headers: {
#		'Content-Type': 'application/json',
#	},
#	body: JSON.stringify({
#		accountName,
#		projectSlug,
#		// from commit
#		commitId: 'aa03f23db5840f9251006b9df9f46a19cf07bfff', // CHANGE ME - delete to build latest
#		branch: 'master', // CHANGE ME
#		// // or from PR
#		// pullRequestId: 3,
#		// // env vars
#		// "environmentVariables": {
#		//	"my_var": "value",
#		//	"another_var": "another value"
#		// }
#	}),
#});    
    
